Создайте класс Car.

Добавьте приватные поля для марки машины, года выпуска и цены.

Создайте публичные методы для получения и изменения этих полей.

Модифицируйте класс Car из предыдущего задания.

Добавьте конструктор, который будет инициализировать все поля объекта при его создании.

Добавьте методы для отображения информации о машине в формате: Марка: X, Год: Y, Цена: Z.

Создайте класс Employee.

Поля: имя (строка), возраст (целое число), зарплата (действительное число).

Конструктор должен инициализировать эти поля, а также устанавливать зарплату по умолчанию (например, 50000).

Сделайте поля приватными и добавьте публичные методы для доступа к ним.

Добавьте методы в класс Employee для расчета годовой зарплаты и отображения информации о сотруднике.

Метод для вычисления годовой зарплаты: умножьте месячную зарплату на 12.

Метод для вывода всей информации о сотруднике.

Создайте класс Rectangle.

Приватные поля: длина и ширина.

Конструктор по умолчанию должен инициализировать их значениями 0.

Добавьте перегруженные конструкторы для инициализации с заданной длиной и шириной.

Добавьте методы для вычисления периметра и площади.

Модифицируйте класс Rectangle из предыдущего задания.

Создайте свойство (property) для вычисления диагонали прямоугольника.

Сделайте так, чтобы длина и ширина не могли быть отрицательными значениями (проверяйте их в конструкторах и методах)

Для каждого из полей создайте свойства с логикой инкапсуляции (например, проверку значений).

Добавьте метод для сравнения двух книг по цене.

 Добавьте в класс BankAccount метод для начисления процентов.

     -Процент должен рассчитываться на основе текущего баланса.

     -Ставка процентов может быть задана через конструктор.

     -Метод должен быть приватным, чтобы его можно было вызывать только внутри класса.

   Создайте класс Product.

     -Поля: название, цена, количество на складе.

     -Конструктор должен инициализировать все поля.

     -Добавьте методы для изменения цены и количества.

     -Реализуйте свойство, которое не позволяет устанавливать цену ниже нуля.

      Создайте класс Book.

     -Поля: название, автор, цена, количество страниц.

     -Создайте несколько перегруженных конструкторов:

     -По умолчанию (с пустыми значениями).

     -Добавьте метод для получения информации о книге в формате: Название: X, Автор: Y, Цена: Z, Страниц: N.